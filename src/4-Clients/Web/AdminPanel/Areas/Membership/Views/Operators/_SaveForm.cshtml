@using TaskoMask.Presentation.UI.AdminPanle.Areas.Membership.Controllers
@model TaskoMask.Application.Share.Dtos.Membership.Operators.OperatorUpsertDto
@{
    var actionName = ViewContext.RouteData.Values["action"].ToString();
}
<form class="form" asp-action="@actionName" data-ajax="true" data-ajax-loading="#global-ajax-loading" data-ajax-method="Post">

    <fieldset>
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)



        @Html.LabelFor(model => model.DisplayName)
        @Html.TextBoxFor(model => model.DisplayName, new { @class = "form-input-1" })
        @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "form-message is-error" })



        @Html.LabelFor(model => model.Email)
        @Html.TextBoxFor(model => model.Email, new { @class = "form-input-1" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "form-message is-error" })



        @Html.LabelFor(model => model.UserName)
        @Html.TextBoxFor(model => model.UserName, new { @class = "form-input-1" })
        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "form-message is-error" })


        @if (actionName == nameof(OperatorsController.Create))
        {
            @Html.LabelFor(model => model.Password)
            @Html.PasswordFor(model => model.Password, new { @class = "form-input-1" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "form-message is-error" })

            @Html.LabelFor(model => model.ConfirmPassword)
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-input-1" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "form-message is-error" })
        }


        <hr />

        <button type="submit" class="btn btn-primary">
            Save Changes
        </button>
        <a href="@Url.Action("Index", "Operators", new { })" class="btn btn-default">
            Back
        </a>

    </fieldset>
</form>
